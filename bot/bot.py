#~/private/venvs/myvenv/bin/python
# -*- coding: utf-8 -*-
# vim:fileencoding=utf-8

import vk_api
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from . import keyboards
from . import database as data
import os

key = keyboards.get_keyboards()
token = ''#your token

def auth():
    vk = vk_api.VkApi(token=token, api_version=5.68)
    vk._auth_token()
    return vk

def get_upload(vk):
    return vk_api.upload.VkUpload(vk)

def get_main_keyboard(id, connection):
    sql = "SELECT subscribe FROM USERS WHERE id = "+str(id)
    res = data.executeSQL(sql = sql, connection = connection)
    if res[0][0] == True:
        return key['main_menu_on']
    else:
        return key['main_menu_off']

def add_user(id, connection):
    sql = "SELECT id FROM USERS WHERE id = " + str(id)
    res = data.executeSQL(sql = sql, connection = connection)
    if res == 0:
        sql = "INSERT INTO USERS (id) VALUES("+str(id)+")"
        data.executeSQL(sql = sql, connection = connection)

def subscribe(id, vk, connection):
    sql = "SELECT subscribe FROM USERS WHERE id = " + str(id)
    res = data.executeSQL(sql, connection)
    if res[0][0]==False:
        sql = "UPDATE USERS SET subscribe = True WHERE id = "+str(id)
        data.executeSQL(sql, connection)
        vk.method("messages.send", {"user_id": id, "message": "–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –Ω–∞—à–∏—Ö –∞–∫—Ü–∏—è—Ö –∏ –Ω–µ —Ç–æ–ª—å–∫–æüòâ", "keyboard": get_main_keyboard(id, connection)})
    else:
        sql = "UPDATE USERS SET subscribe = False WHERE id = "+str(id)
        data.executeSQL(sql, connection)
        vk.method("messages.send", {"user_id": id, "message": "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, —è –±—É–¥—É —Ä–∞–¥üôÉ", "keyboard": get_main_keyboard(id, connection)})

def get_photos(directories, type, upload):
    files = []
    for directory in directories:
        allow_files = os.listdir(directory)
        if type == 'main':
            files.append(directory+"/"+allow_files[allow_files.index('main.jpeg')])
        else:
            for f in allow_files:
                files.append(directory+"/"+f)
    return upload.photo_messages(files)

def get_attachment(photos):
    attachment = ""
    for photo in photos:
        attachment = attachment + "photo"+str(photo['owner_id'])+"_"+str(photo['id'])+","
    return attachment[0:len(attachment)-1]

def get_auto_temp(state, connection):
    sql = ""
    if state[6] == "<10":
        sql = sql + "select mark, model, volume, drive_unit, steering, count_of_places, normal_price, img from CARS where"
    elif state[6] == "10-20":
        sql = sql + "select mark, model, volume, drive_unit, steering, count_of_places, good_price, img from CARS where"
    elif state[6] == ">20":
        sql = sql + "select mark, model, volume, drive_unit, steering, count_of_places, perfect_price, img from CARS where"
    if state[1]!=None:
        sql = sql + " type = '" + str(state[1]) + "'"
    else:
        sql = sql + " 1<2"
    return data.executeSQL(sql, connection)



def get_auto(state, connection):
    sql = ""
    if state[6] == "<10":
        sql = sql + "select mark, model, volume, drive_unit, steering, count_of_places, normal_price, img from CARS"
        if state[5] == "<2000":
            sql = sql + " where normal_price < 2000"
        elif state[5] == "2000-3000":
            sql = sql + " where normal_price >= 2000 and normal_price < 3000"
        elif state[5] == ">3000":
            sql = sql + " where normal_price >= 2000"
        else:
            sql = sql + " where 1<2"
    elif state[6] == "10-20":
        sql = sql + "select mark, model, volume, drive_unit, steering, count_of_places, good_price, img from CARS"
        if state[5] == "<2000":
            sql = sql + " where good_price < 2000"
        elif state[5] == "2000-3000":
            sql = sql + " where good_price >= 2000 and normal_price < 3000"
        elif state[5] == ">3000":
            sql = sql + " where good_price >= 2000"
        else:
            sql = sql + " where 1<2"
    elif state[6] == ">20":
        sql = sql + "select mark, model, volume, drive_unit, steering, count_of_places, perfect_price, img from CARS"
        if state[5] == "<2000":
            sql = sql + " where perfect_price < 2000"
        elif state[5] == "2000-3000":
            sql = sql + " where perfect_price >= 2000 and normal_price < 3000"
        elif state[5] == ">3000":
            sql = sql + " where perfect_price >= 2000"
        else:
            sql = sql + " where 1<2"
    if state[1]!=None:
        sql = sql + " and type = '" + str(state[1]) + "'"
    if state[2]!=None:
        sql = sql + " and drive_unit = '"+str(state[2])+"'"
    if state[3] == "<2":
        sql = sql+" and volume < 2"
    elif state[3] == "2-3":
        sql = sql +" and volume >= 2 and volume <3"
    elif state[3] == ">3":
        sql = sql +" and volume >=3"
    if state[4]!=None:
        sql = sql + " and steering = '"+str(state[4])+"'"
    return data.executeSQL(sql, connection)



def data_processing(id, pay, msg, vk, connection, upload):
    add_user(id = id, connection = connection)
    people = vk.method("users.get", {"user_ids":id})
    if pay=='"command":"start"' or pay == "admin":
        photos = get_photos(["/home/httpd/vhosts/chita-prokat.ru/httpdocs/static/bot/img/logo"], "main", upload)
        name = people[0]["first_name"]
        vk.method("messages.send", {"user_id": id, "message": "–ü—Ä–∏–≤–µ—Ç, "+name+"!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –±–æ—Ç –ú–∞–∫—Å. –Ø –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –ª—É—á—à—É—é –∫–æ–º–ø–∞–Ω–∏—é –ø–æ –∞—Ä–µ–Ω–¥–µ –∞–≤—Ç–æ '–ü—Ä–æ–∫–∞—Ç –°–µ—Ä–≤–∏—Å –ß–∏—Ç–∞'\n\n–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏, –ø–æ–¥–æ–±—Ä–∞—Ç—å –∞–≤—Ç–æ –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ!\n\n–°–æ –º–Ω–æ–π —Å–ª–µ–¥—É–µ—Ç –æ–±—â–∞—Ç—å—Å—è –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ.\n–ò—Ç–∞–∫, –Ω–∞—á–Ω–µ–ºüòé", "keyboard": get_main_keyboard(id = id, connection = connection), "attachment": get_attachment(photos)})
    elif msg=="admin":
        print('inside admin')
        vk.method("messages.send", {"user_id": id, "message": "–û–ø—è—Ç—å –ø–æ –Ω–æ–≤–æ–π? –ù—É, –ª–∞–¥–Ω–æ...", "keyboard":key['start']})
    
    elif pay == "about":
        vk.method("messages.send", {"user_id": id, "message": "–ö–∞–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", "keyboard":key['about']})
    elif pay == "about_us":
        about = open("/home/httpd/vhosts/chita-prokat.ru/httpdocs/static/bot/info/about.txt", "rb")
        msg = about.read()
        vk.method("messages.send", {"user_id": id, "message": msg, "keyboard":get_main_keyboard(id = id, connection = connection)})
        about.close()
    elif pay == "about_rent":
        rent = open("/home/httpd/vhosts/chita-prokat.ru/httpdocs/static/bot/info/rent.txt", "rb")
        msg = rent.read()
        vk.method("messages.send", {"user_id": id, "message": msg})
        docs = open("/home/httpd/vhosts/chita-prokat.ru/httpdocs/static/bot/info/docs.txt", "rb")
        msg = docs.read()
        vk.method("messages.send", {"user_id": id, "message": msg, "keyboard":get_main_keyboard(id = id, connection = connection)})
        rent.close()
        docs.close()
    elif pay == "subscribe":
        subscribe(id, vk, connection)  
    elif pay == "selection":
        sql = "delete from USERS_CARS where id = "+str(id)
        data.executeSQL(sql, connection)
        vk.method("messages.send", {"user_id": id, "message": "–ö–∞–∫–æ–π –∞–≤—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", "keyboard": key['type']})
    elif pay == "how_long":
        if msg == "–ú–∏–Ω–∏–≤—ç–Ω":
            sql = "insert into USERS_CARS (id, type) values("+str(id)+", 'minivan')"
            data.executeSQL(sql, connection)
        elif msg == "–õ–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ":
            sql = "insert into USERS_CARS (id, type) values("+str(id)+", 'passenger')"
            data.executeSQL(sql, connection)
        elif msg == "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫":
            sql = "insert into USERS_CARS (id, type) values("+str(id)+", 'suv')"
            data.executeSQL(sql, connection)
        elif msg =="–ù–µ–≤–∞–∂–Ω–æ":
            sql = "insert into USERS_CARS (id) values("+str(id)+")"
            data.executeSQL(sql, connection)
        vk.method("messages.send", {"user_id": id, "message": "–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –±—Ä–∞—Ç—å –∞–≤—Ç–æ? –û—Ç —ç—Ç–æ–≥–æ –∑–∞–≤–∏—Å–∏—Ç —Ü–µ–Ω–∞.", "keyboard": key['how_long']})
    
    elif pay == "finish_selection":
        if msg == "–î–æ –¥–µ—Å—è—Ç–∏ –¥–Ω–µ–π":
            sql = "update USERS_CARS set how_long = '<10' where id = "+str(id)
            data.executeSQL(sql, connection)
        elif msg == "–û—Ç –¥–µ—Å—è—Ç–∏ –¥–æ –¥–≤–∞–¥—Ü–∞—Ç–∏ –¥–Ω–µ–π":  
            sql = "update USERS_CARS set how_long = '10-20' where id = "+str(id)
            data.executeSQL(sql, connection)
        elif msg == "–û—Ç –¥–≤–∞–¥—Ü–∞—Ç–∏ –æ–¥–Ω–æ–≥–æ –¥–Ω—è":
            sql = "update USERS_CARS set how_long = '>20' where id = "+str(id)
            data.executeSQL(sql, connection)
        sql = "select * from USERS_CARS where id = " + str(id)
        res = data.executeSQL(sql, connection)
        cars = get_auto_temp(res[0], connection)
        if cars != 0:
            i = 1
            s = ""
            directories = []
            #select mark, model, volume, drive_unit, steering, count_of_places, normal_price, img
            for car in cars:
                directories.append(car[7])
                s = s+str(i)+"."+str(car[0])+" "+str(car[1])+"\n"
                s = s+"–û–±—ä–µ–º "+str(car[2])+" –ª–∏—Ç—Ä–∞\n"
                if car[3] == "front":
                    s = s+"–ü–µ—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–≤–æ–¥\n"
                elif car[3] == "back":
                    s = s+"–ó–∞–¥–Ω–∏–π –ø—Ä–∏–≤–æ–¥\n"
                if car[4] == "left":
                    s = s+"–õ–µ–≤—ã–π —Ä—É–ª—å\n"
                elif car[4] == "right":
                    s = s+"–ü—Ä–∞–≤—ã–π —Ä—É–ª—å\n"
                s = s+str(car[5])+" –º–µ—Å—Ç\n"
                s = s+"–¶–µ–Ω–∞: "+str(car[6])+" —Ä—É–±–ª–µ–π/–¥–µ–Ω—å\n\n"
                i = i+1
                if i % 8 == 0:
                    photos = get_photos(directories, "main", upload)
                    vk.method("messages.send", {"user_id": id, "message":s, "attachment": get_attachment(photos)})
                    directories = []
                    s = ""
            if s != "":
                photos = get_photos(directories, "main", upload)
                vk.method("messages.send", {"user_id": id, "message":s, "attachment": get_attachment(photos)})
                vk.method("messages.send", {"user_id": id, "message":"–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∑–∞–ª—Å—è —Å –í–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞—Ä–µ–Ω–¥–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è?\n\n–û–Ω –Ω–∞–ø–∏—à–µ—Ç –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–∞–º–æ–µ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –í–∞—Å –æ—Ç–∫—Ä—ã—Ç—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.", "keyboard": key["connect"]})
        else:        
            vk.method("messages.send", {"user_id": id, "message": "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ—Ç.", "keyboard": get_main_keyboard(id, connection)})     
    elif pay == "connect":
        if msg == "–î–∞, —Ö–æ—á—É":
            fromaddr = "prokatservicechita@chita-prokat.ru"
            mypass = 'azsxdcfr132'
            toaddr = "prokatservicechita@gmail.com"
 
            msg = MIMEMultipart()
            msg['From'] = fromaddr
            msg['To'] = toaddr
            msg['Subject'] = "–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç!"
 
            m = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å vk.com/id"+str(id)+" —Ö–æ—á–µ—Ç —á—Ç–æ–±—ã –≤—ã –ø–æ–º–æ–≥–ª–∏ –µ–º—É —Å –ø–æ–¥–±–æ—Ä–æ–º:\n"
            sql = "select type from USERS_CARS where id = "+str(id)
            res = data.executeSQL(sql, connection)
            if res[0][0] == "suv":
                m = m + "–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–∞\n"
            elif res[0][0] == "passenger":
                m = m + "–õ–µ–≥–æ–≤–æ–≥–æ –∞–≤—Ç–æ\n"
            elif res[0][0] == "minivan":
                m = m+"–ú–∏–Ω–∏–≤—ç–Ω–∞\n"
            else:
                m = m+"–õ—é–±–æ–≥–æ –∞–≤—Ç–æ\n"
            sql = "select how_long from USERS_CARS where id = "+str(id)
            res = data.executeSQL(sql, connection)
            if res[0][0] == "<10":
                m = m + "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç –±—Ä–∞—Ç—å –Ω–∞ —Å—Ä–æ–∫ –º–µ–Ω–µ–µ 10 –¥–Ω–µ–π"
            elif res[0][0] == "10-20":
                m = m + "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç –±—Ä–∞—Ç—å –Ω–∞ —Å—Ä–æ–∫ –æ—Ç 10 –¥–æ 20 –¥–Ω–µ–π"
            elif res[0][0] == ">20":
                m = m + "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç –±—Ä–∞—Ç—å –Ω–∞ —Å—Ä–æ–∫ –æ—Ç 21 –¥–Ω—è"
            msg.attach(MIMEText(m, 'plain'))
            server = smtplib.SMTP('smtp.chita-prokat.ru', 25) 
            server.starttls()
            server.login(fromaddr, mypass)
            text = msg.as_string()
            server.sendmail(fromaddr, toaddr, text)
            server.quit()
            vk.method("messages.send", {"user_id": id, "message": "–° –í–∞—à–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!", "keyboard": get_main_keyboard(id, connection)})
        elif msg == "–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ":
            vk.method("messages.send", {"user_id": id, "message": "–ö–∞–∫ —Å–∫–∞–∂–∏—Ç–µ", "keyboard": get_main_keyboard(id, connection)})
    else: 
        vk.method("messages.send", {"user_id":id, "message": "–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!\n –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫–∞–∫—É—é-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ª–∏—á–Ω–æ, –ø–∏—à–∏—Ç–µ –ú–∞–∫—Å–∏–º—É https://vk.com/mazzepa4x4","keyboard": get_main_keyboard(id = id, connection = connection)})